########################################
# GO-Docker                            #
########################################

# PLUGINS ##############################
plugins_dir: None

# DIRECTORIES ##########################
shared_dir: None

# DEFAULTS #############################

defaults_cpu: 1
defaults_ram: 2

# Number of days of inactivity after which user usage should be reset
user_reset_usage_duration: 30

# Disable network in containers
# If set , application won't be able to install sudo package if not present.
# In this case, you should make sure container contains required packages.
network_disabled: False

# Allow root access to containers
allow_root: True

# Live notifications ##################
# Use live notifications on tasks, needs Go-D-Live server
live_events: True
#  Go-D-Live websocket URL
live_events_url: 'http://localhost:8001'

# IMAGES ###############################
# Default container images proposed to user
default_images: [
    { name: 'centos', url: 'centos:latest', interactive: False, default: True},
    { name: 'ubuntu', url: 'rastasheep/ubuntu-sshd', interactive: True}
]

# Constraints #########################

constraints: [
    { name: 'storage', value: 'ssd,disk' },
    { name: 'device', value: 'gpu' }
]

# VOLUMES ##############################

volumes: [
    { name: 'home',
      acl: 'rw'
    },
    { name: 'omaha',
      acl: 'rw'
    },
    { name: 'db',
      acl: 'ro'
    },
]

# PORTS ###############################
port_allocate: True  # allocates a port from following range instead of mapping port to itself
port_start: 10000
port_range: 1000


# MONGODB ##############################
mongo_url: 'mongodb://localhost:27017/'
mongo_db: 'godtest'

# INFLUXDB ############################
influxdb_host: ''
influxdb_port: 8083
influxdb_user: ''
influxdb_password: ''
influxdb_db: ''

# REDIS ################################
# Redis configuration
redis_host: 'localhost'
redis_port:  6379
# Redis database id
redis_db: 1
redis_prefix: 'godtest'

# Scheduling ###########################
scheduler_policy: 'FiFo'
max_job_pop: 100

# Execution system #####################
executor: 'fake'

# Authentication #######################
auth_policy: 'fake'

ldap_host: None
ldap_port: None
ldap_dn: None

# Watchers #############################
# List of watchers, comma separated, example 'maxlifespan'
watchers: 'fake'

# Docker ###############################
docker_url: 'tcp://127.0.0.1:2376'
# API version from docker version command
docker_api_version: '1.17'

# CAdvisor #############################
cadvisor_port: 8080
# /containers/docker/ to map to /containers/docker/container_id
cadvisor_url_part: '/containers/docker/'
# Number of samples (seconds) to display , according to cAdvisor launch option -storage_duration
cadvisor_samples: 60

# Logging ###############################
log_location: ''
log_level: 'DEBUG'
log_graylog_host: None
log_graylog_port: None
log_logstash_host: None
log_logstash_port: None

# Disk quota ###############################
# Optional disk quota management
# Default: None (no quota)
# Possible values (value + unit): '12' (bytes), '5k' (kilobytes), '12M' (megabytes),
# 40G (gigabytes)
disk_default_quota: '1M'



# Rate limiting ############################
# Max number of pending tasks for a user
# New tasks will be rejected if rate is reached
# It is wise to limit it to limit total number of pending jobs for scheduler.
# Default: None (no limit)
# Value example: 1000
rate_limit: 10
# Max number of pending tasks for all users (to avoid scheduler overload)
# When limit is reached, new tasks are rejected
rate_limit_all: 10000
